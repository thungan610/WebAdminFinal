{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import {\n//   Chart,\n//   CategoryScale,\n//   LinearScale,\n//   PieController,\n//   ArcElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from \"chart.js\";\n\n// const TopProductsChart = () => {\n//   const getStartOfWeek = () => {\n//     const today = new Date();\n//     const dayOfWeek = today.getDay(); // 0 (Chủ nhật) đến 6 (Thứ bảy)\n//     const startOfWeek = new Date(today);\n//     startOfWeek.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)); // Nếu Chủ nhật, lấy thứ Hai trước đó\n//     return startOfWeek.toISOString().split(\"T\")[0]; // Trả về dạng 'YYYY-MM-DD'\n//   };\n\n//   const [selectedDate, setSelectedDate] = useState(getStartOfWeek());\n//   const [chartInstance, setChartInstance] = useState(null);\n//   const [dateRange, setDateRange] = useState(\"\");\n\n//   const calculateDateRange = (startDate) => {\n//     const start = new Date(startDate);\n//     const end = new Date(start);\n//     end.setDate(start.getDate() + 6);\n\n//     const formatDate = (date) =>\n//       `${date.getDate().toString().padStart(2, \"0\")}/${(date.getMonth() + 1)\n//         .toString()\n//         .padStart(2, \"0\")}/${date.getFullYear()}`;\n\n//     return `${formatDate(start)} - ${formatDate(end)}`;\n//   };\n\n//   useEffect(() => {\n//     Chart.register(\n//       CategoryScale,\n//       LinearScale,\n//       PieController,\n//       ArcElement,\n//       Title,\n//       Tooltip,\n//       Legend\n//     );\n\n//     const fetchData = async () => {\n//       try {\n//         const query = `?date=${selectedDate}`;\n//         const res = await fetch(\n//           `http://localhost:6677/products/getTop10PW${query}`\n//         );\n//         const result = await res.json();\n\n//         const labels = [];\n//         const data = [];\n//         result.data.forEach((element) => {\n//           labels.push(element.name);\n//           data.push(Number(element.sold));\n//         });\n\n//         const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n\n//         if (chartInstance) {\n//           chartInstance.destroy();\n//         }\n\n//         const newChart = new Chart(ctx, {\n//           type: \"pie\",\n//           data: {\n//             labels: labels,\n//             datasets: [\n//               {\n//                 label: \"Lượt bán\",\n//                 data: data,\n//                 backgroundColor: [\n//                   \"rgba(255, 99, 132, 0.6)\",\n//                   \"rgba(54, 162, 235, 0.6)\",\n//                   \"rgba(75, 192, 192, 0.6)\",\n//                   \"rgba(255, 206, 86, 0.6)\",\n//                   \"rgba(153, 102, 255, 0.6)\",\n//                   \"rgba(255, 159, 64, 0.6)\",\n//                   \"rgba(201, 203, 207, 0.6)\",\n//                 ],\n//                 borderColor: [\n//                   \"rgba(255, 99, 132, 1)\",\n//                   \"rgba(54, 162, 235, 1)\",\n//                   \"rgba(75, 192, 192, 1)\",\n//                   \"rgba(255, 206, 86, 1)\",\n//                   \"rgba(153, 102, 255, 1)\",\n//                   \"rgba(255, 159, 64, 1)\",\n//                   \"rgba(201, 203, 207, 1)\",\n//                 ],\n//                 borderWidth: 1,\n//               },\n//             ],\n//           },\n//           options: {\n//             responsive: true,\n//             maintainAspectRatio: true,\n//             aspectRatio: 1.5,\n//             plugins: {\n//               legend: {\n//                 position: \"top\",\n//               },\n//               title: {\n//                 display: true,\n//                 text: \"Top sản phẩm bán chạy\",\n//               },\n//             },\n//           },\n//         });\n\n//         setChartInstance(newChart);\n\n//         setDateRange(calculateDateRange(selectedDate));\n//       } catch (error) {\n//         console.error(\"Error fetching or displaying data:\", error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [selectedDate]);\n\n//   return (\n//     <div style={{ padding: 5, marginBottom: \"20px\" }}>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         <a\n//           className=\"btn-chart\"\n//           href=\"/charts\"\n//           style={{\n//             textAlign: \"center\",\n//             marginTop: 10,\n//             color: \"#27aae1\",\n//             textDecoration: \"none\",\n//             marginRight: 18,\n//             fontSize: 16,\n//             fontWeight: 600,\n//           }}\n//         >\n//           Quay lại\n//         </a>\n//         <h1\n//           style={{\n//             paddingLeft: 20,\n//             color: \"#27AAE1\",\n//             fontSize: \"24px\",\n//             fontWeight: \"bold\",\n//             textAlign: \"center\",\n//             textTransform: \"uppercase\",\n//           }}\n//         >\n//           Sản phẩm bán chạy trong khoảng thời gian\n//         </h1>\n\n//         <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n//           <input\n//             type=\"date\"\n//             value={selectedDate}\n//             onChange={(e) => setSelectedDate(e.target.value)}\n//             style={{\n//               padding: \"8px 12px\",\n//               fontSize: \"14px\",\n//               border: \"none\",\n//               borderRadius: \"5px\",\n//               backgroundColor: \"rgba(39, 170, 225, 0.6)\",\n//               color: \"white\",\n//               cursor: \"pointer\",\n//               boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n//             }}\n//           />\n//         </div>\n//       </div>\n\n//       {dateRange && (\n//         <p\n//           style={{\n//             textAlign: \"center\",\n//             marginTop: \"10px\",\n//             fontSize: \"14px\",\n//             color: \"#555\",\n//           }}\n//         >\n//           Khoảng thời gian: {dateRange}\n//         </p>\n//       )}\n\n//       <div style={{ maxWidth: \"400px\", margin: \"0 auto\" }}>\n//         <canvas id=\"myChart\" style={{ maxWidth: \"100%\", height: \"auto\" }}></canvas>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TopProductsChart;","map":{"version":3,"names":[],"sources":["D:/WebAdminFinal/src/Screen/ChartWeek.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Chart,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PieController,\r\n//   ArcElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from \"chart.js\";\r\n\r\n// const TopProductsChart = () => {\r\n//   const getStartOfWeek = () => {\r\n//     const today = new Date();\r\n//     const dayOfWeek = today.getDay(); // 0 (Chủ nhật) đến 6 (Thứ bảy)\r\n//     const startOfWeek = new Date(today);\r\n//     startOfWeek.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)); // Nếu Chủ nhật, lấy thứ Hai trước đó\r\n//     return startOfWeek.toISOString().split(\"T\")[0]; // Trả về dạng 'YYYY-MM-DD'\r\n//   };\r\n\r\n//   const [selectedDate, setSelectedDate] = useState(getStartOfWeek());\r\n//   const [chartInstance, setChartInstance] = useState(null);\r\n//   const [dateRange, setDateRange] = useState(\"\");\r\n\r\n//   const calculateDateRange = (startDate) => {\r\n//     const start = new Date(startDate);\r\n//     const end = new Date(start);\r\n//     end.setDate(start.getDate() + 6);\r\n\r\n//     const formatDate = (date) =>\r\n//       `${date.getDate().toString().padStart(2, \"0\")}/${(date.getMonth() + 1)\r\n//         .toString()\r\n//         .padStart(2, \"0\")}/${date.getFullYear()}`;\r\n\r\n//     return `${formatDate(start)} - ${formatDate(end)}`;\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     Chart.register(\r\n//       CategoryScale,\r\n//       LinearScale,\r\n//       PieController,\r\n//       ArcElement,\r\n//       Title,\r\n//       Tooltip,\r\n//       Legend\r\n//     );\r\n\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const query = `?date=${selectedDate}`;\r\n//         const res = await fetch(\r\n//           `http://localhost:6677/products/getTop10PW${query}`\r\n//         );\r\n//         const result = await res.json();\r\n\r\n//         const labels = [];\r\n//         const data = [];\r\n//         result.data.forEach((element) => {\r\n//           labels.push(element.name);\r\n//           data.push(Number(element.sold));\r\n//         });\r\n\r\n//         const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n\r\n//         if (chartInstance) {\r\n//           chartInstance.destroy();\r\n//         }\r\n\r\n//         const newChart = new Chart(ctx, {\r\n//           type: \"pie\",\r\n//           data: {\r\n//             labels: labels,\r\n//             datasets: [\r\n//               {\r\n//                 label: \"Lượt bán\",\r\n//                 data: data,\r\n//                 backgroundColor: [\r\n//                   \"rgba(255, 99, 132, 0.6)\",\r\n//                   \"rgba(54, 162, 235, 0.6)\",\r\n//                   \"rgba(75, 192, 192, 0.6)\",\r\n//                   \"rgba(255, 206, 86, 0.6)\",\r\n//                   \"rgba(153, 102, 255, 0.6)\",\r\n//                   \"rgba(255, 159, 64, 0.6)\",\r\n//                   \"rgba(201, 203, 207, 0.6)\",\r\n//                 ],\r\n//                 borderColor: [\r\n//                   \"rgba(255, 99, 132, 1)\",\r\n//                   \"rgba(54, 162, 235, 1)\",\r\n//                   \"rgba(75, 192, 192, 1)\",\r\n//                   \"rgba(255, 206, 86, 1)\",\r\n//                   \"rgba(153, 102, 255, 1)\",\r\n//                   \"rgba(255, 159, 64, 1)\",\r\n//                   \"rgba(201, 203, 207, 1)\",\r\n//                 ],\r\n//                 borderWidth: 1,\r\n//               },\r\n//             ],\r\n//           },\r\n//           options: {\r\n//             responsive: true,\r\n//             maintainAspectRatio: true,\r\n//             aspectRatio: 1.5,\r\n//             plugins: {\r\n//               legend: {\r\n//                 position: \"top\",\r\n//               },\r\n//               title: {\r\n//                 display: true,\r\n//                 text: \"Top sản phẩm bán chạy\",\r\n//               },\r\n//             },\r\n//           },\r\n//         });\r\n\r\n//         setChartInstance(newChart);\r\n\r\n//         setDateRange(calculateDateRange(selectedDate));\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching or displaying data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [selectedDate]);\r\n\r\n//   return (\r\n//     <div style={{ padding: 5, marginBottom: \"20px\" }}>\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           justifyContent: \"space-between\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         <a\r\n//           className=\"btn-chart\"\r\n//           href=\"/charts\"\r\n//           style={{\r\n//             textAlign: \"center\",\r\n//             marginTop: 10,\r\n//             color: \"#27aae1\",\r\n//             textDecoration: \"none\",\r\n//             marginRight: 18,\r\n//             fontSize: 16,\r\n//             fontWeight: 600,\r\n//           }}\r\n//         >\r\n//           Quay lại\r\n//         </a>\r\n//         <h1\r\n//           style={{\r\n//             paddingLeft: 20,\r\n//             color: \"#27AAE1\",\r\n//             fontSize: \"24px\",\r\n//             fontWeight: \"bold\",\r\n//             textAlign: \"center\",\r\n//             textTransform: \"uppercase\",\r\n//           }}\r\n//         >\r\n//           Sản phẩm bán chạy trong khoảng thời gian\r\n//         </h1>\r\n\r\n//         <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={selectedDate}\r\n//             onChange={(e) => setSelectedDate(e.target.value)}\r\n//             style={{\r\n//               padding: \"8px 12px\",\r\n//               fontSize: \"14px\",\r\n//               border: \"none\",\r\n//               borderRadius: \"5px\",\r\n//               backgroundColor: \"rgba(39, 170, 225, 0.6)\",\r\n//               color: \"white\",\r\n//               cursor: \"pointer\",\r\n//               boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n//             }}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {dateRange && (\r\n//         <p\r\n//           style={{\r\n//             textAlign: \"center\",\r\n//             marginTop: \"10px\",\r\n//             fontSize: \"14px\",\r\n//             color: \"#555\",\r\n//           }}\r\n//         >\r\n//           Khoảng thời gian: {dateRange}\r\n//         </p>\r\n//       )}\r\n\r\n//       <div style={{ maxWidth: \"400px\", margin: \"0 auto\" }}>\r\n//         <canvas id=\"myChart\" style={{ maxWidth: \"100%\", height: \"auto\" }}></canvas>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TopProductsChart;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}