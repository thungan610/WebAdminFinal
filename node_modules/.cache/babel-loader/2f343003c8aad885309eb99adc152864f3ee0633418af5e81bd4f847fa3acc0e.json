{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebAdminFinal\\\\src\\\\Screen\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Chart, CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopProductsChart = () => {\n  _s();\n  useEffect(() => {\n    // Register the necessary components for the chart\n    Chart.register(CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend);\n    const getTop10 = async () => {\n      try {\n        const res = await fetch(\"http://localhost:6677/products/getTopProductSell\");\n        const result = await res.json();\n        const labels = [];\n        const data = [];\n        result.data.forEach(element => {\n          labels.push(element.name);\n          data.push(Number(element.sold)); // Ensure quantity is a number\n        });\n        const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n        if (ctx) {\n          // Destroy old chart instance if it exists\n          if (Chart.getChart(\"myChart\")) {\n            Chart.getChart(\"myChart\").destroy();\n          }\n          new Chart(ctx, {\n            type: \"bar\",\n            data: {\n              labels: labels,\n              datasets: [{\n                label: \"Lượt bán\",\n                data: data,\n                borderWidth: 1,\n                backgroundColor: [\"rgba(255, 99, 132, 0.6)\",\n                // Color 1\n                \"rgba(54, 162, 235, 0.6)\",\n                // Color 2\n                \"rgba(75, 192, 192, 0.6)\" // Color 3\n                ],\n                borderColor: [\"rgba(255, 99, 132, 1)\",\n                // Border Color 1\n                \"rgba(54, 162, 235, 1)\",\n                // Border Color 2\n                \"rgba(75, 192, 192, 1)\" // Border Color 3\n                ]\n              }]\n            },\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n      } catch (error) {\n        console.log(\"Error fetching or displaying data:\", error);\n      }\n    };\n    getTop10();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          paddingLeft: 90,\n          color: \"#27AAE1\",\n          fontSize: \"24px\",\n          // Kích thước chữ\n          fontWeight: \"bold\",\n          // Đậm chữ\n          textAlign: \"center\",\n          // Căn giữa\n          textTransform: \"uppercase\" // Chuyển chữ thành in hoa\n        },\n        children: \"Top 10 s\\u1EA3n ph\\u1EA9m b\\xE1n ch\\u1EA1y nh\\u1EA5t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn-chart\",\n        href: \"/ChartWeek\",\n        alt: \"insert\",\n        style: {\n          display: \"block\",\n          textAlign: \"center\" /* Căn giữa văn bản */,\n          marginTop: 10 /* Khoảng cách giữa nút và liên kết */,\n          color: \"#27aae1\" /* Màu chữ cho liên kết */,\n          textDecoration: \"none\" /* Bỏ gạch chân */,\n          marginRight: 18,\n          fontSize: 16,\n          fontWeight: 600\n        },\n        children: \"Theo tu\\u1EA7n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(TopProductsChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TopProductsChart;\nexport default TopProductsChart;\nvar _c;\n$RefreshReg$(_c, \"TopProductsChart\");","map":{"version":3,"names":["React","useEffect","Chart","CategoryScale","LinearScale","BarController","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","TopProductsChart","_s","register","getTop10","res","fetch","result","json","labels","data","forEach","element","push","name","Number","sold","ctx","document","getElementById","getContext","getChart","destroy","type","datasets","label","borderWidth","backgroundColor","borderColor","options","scales","y","beginAtZero","error","console","log","style","padding","children","display","width","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","color","fontSize","fontWeight","textAlign","textTransform","className","href","alt","marginTop","textDecoration","marginRight","id","_c","$RefreshReg$"],"sources":["D:/WebAdminFinal/src/Screen/Charts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarController,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nconst TopProductsChart = () => {\r\n  useEffect(() => {\r\n    // Register the necessary components for the chart\r\n    Chart.register(\r\n      CategoryScale,\r\n      LinearScale,\r\n      BarController,\r\n      BarElement,\r\n      Title,\r\n      Tooltip,\r\n      Legend\r\n    );\r\n\r\n    const getTop10 = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          \"http://localhost:6677/products/getTopProductSell\"\r\n        );\r\n        const result = await res.json();\r\n\r\n        const labels = [];\r\n        const data = [];\r\n        result.data.forEach((element) => {\r\n          labels.push(element.name);\r\n          data.push(Number(element.sold)); // Ensure quantity is a number\r\n        });\r\n\r\n        const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n        if (ctx) {\r\n          // Destroy old chart instance if it exists\r\n          if (Chart.getChart(\"myChart\")) {\r\n            Chart.getChart(\"myChart\").destroy();\r\n          }\r\n\r\n          new Chart(ctx, {\r\n            type: \"bar\",\r\n            data: {\r\n              labels: labels,\r\n              datasets: [\r\n                {\r\n                  label: \"Lượt bán\",\r\n                  data: data,\r\n                  borderWidth: 1,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.6)\", // Color 1\r\n                    \"rgba(54, 162, 235, 0.6)\", // Color 2\r\n                    \"rgba(75, 192, 192, 0.6)\", // Color 3\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\", // Border Color 1\r\n                    \"rgba(54, 162, 235, 1)\", // Border Color 2\r\n                    \"rgba(75, 192, 192, 1)\", // Border Color 3\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            options: {\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error fetching or displaying data:\", error);\r\n      }\r\n    };\r\n    getTop10();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 5,\r\n      }}\r\n    >\r\n      <div style={{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",  \r\n      }}>\r\n        <div>\r\n          \r\n        </div>\r\n        <h1\r\n          style={{\r\n           \r\n            paddingLeft: 90,\r\n            color: \"#27AAE1\",\r\n            fontSize: \"24px\", // Kích thước chữ\r\n            fontWeight: \"bold\", // Đậm chữ\r\n            textAlign: \"center\", // Căn giữa\r\n            textTransform: \"uppercase\", // Chuyển chữ thành in hoa\r\n          }}\r\n        >\r\n          Top 10 sản phẩm bán chạy nhất\r\n        </h1>\r\n        <a\r\n          className=\"btn-chart\"\r\n          href=\"/ChartWeek\"\r\n          alt=\"insert\"\r\n          style={{\r\n            display: \"block\",\r\n            textAlign: \"center\" /* Căn giữa văn bản */,\r\n            marginTop: 10 /* Khoảng cách giữa nút và liên kết */,\r\n            color: \"#27aae1\" /* Màu chữ cho liên kết */,\r\n            textDecoration: \"none\" /* Bỏ gạch chân */,\r\n            marginRight: 18,\r\n            fontSize: 16,\r\n            fontWeight: 600,\r\n\r\n          }}\r\n        >\r\n          Theo tuần\r\n        </a>\r\n      </div>\r\n\r\n      <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopProductsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}