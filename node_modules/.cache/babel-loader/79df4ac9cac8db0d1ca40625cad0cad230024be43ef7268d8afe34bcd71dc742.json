{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebAdminFinal\\\\src\\\\Screen\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chart, CategoryScale, LinearScale, PieController, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopProductsChart = () => {\n  _s();\n  const getStartOfWeek = () => {\n    const today = new Date();\n    const dayOfWeek = today.getDay(); // 0 (Chủ nhật) đến 6 (Thứ bảy)\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)); // Nếu Chủ nhật, lấy thứ Hai trước đó\n    return startOfWeek.toISOString().split(\"T\")[0]; // Trả về dạng 'YYYY-MM-DD'\n  };\n  const [selectedDate, setSelectedDate] = useState(getStartOfWeek());\n  const [chartInstance, setChartInstance] = useState(null);\n  const [dateRange, setDateRange] = useState(\"\");\n  const calculateDateRange = startDate => {\n    const start = new Date(startDate);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    const formatDate = date => `${date.getDate().toString().padStart(2, \"0\")}/${(date.getMonth() + 1).toString().padStart(2, \"0\")}/${date.getFullYear()}`;\n    return `${formatDate(start)} - ${formatDate(end)}`;\n  };\n  useEffect(() => {\n    Chart.register(CategoryScale, LinearScale, PieController, ArcElement, Title, Tooltip, Legend, ChartDataLabels // Đăng ký plugin\n    );\n    const fetchData = async () => {\n      try {\n        const query = `?date=${selectedDate}`;\n        const res = await fetch(`http://localhost:6677/products/getTop10PW${query}`);\n        const result = await res.json();\n        const labels = [];\n        const data = [];\n        result.data.forEach(element => {\n          labels.push(element.name);\n          data.push(Number(element.sold));\n        });\n        const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n        const newChart = new Chart(ctx, {\n          type: \"pie\",\n          data: {\n            labels: labels,\n            datasets: [{\n              label: \"Lượt bán\",\n              data: data,\n              backgroundColor: [\"rgba(255, 99, 132, 0.8)\", \"rgba(54, 162, 235, 0.8)\", \"rgba(75, 192, 192, 0.8)\", \"rgba(255, 206, 86, 0.8)\", \"rgba(153, 102, 255, 0.8)\", \"rgba(255, 159, 64, 0.8)\", \"rgba(201, 203, 207, 0.8)\", \"rgba(90, 203, 207, 0.8)\"],\n              borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\", \"rgba(201, 203, 207, 1)\", \"rgba(90, 203, 207, 1)\"],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: true,\n            aspectRatio: 1.5,\n            plugins: {\n              legend: {\n                position: \"top\",\n                labels: {\n                  generateLabels: chart => chart.data.labels.map((label, index) => ({\n                    text: `${label}`,\n                    fillStyle: chart.data.datasets[0].backgroundColor[index]\n                  }))\n                }\n              },\n              datalabels: {\n                color: \"black\",\n                font: {\n                  size: 12,\n                  weight: \"bold\"\n                },\n                formatter: (value, context) => {\n                  const dataset = context.chart.data.datasets[0];\n                  const total = dataset.data.reduce((sum, data) => sum + data, 0);\n                  const percentage = (value / total * 100).toFixed(1); // Tính %\n                  return `${percentage}%`; // Hiển thị %\n                },\n                anchor: \"end\",\n                // Đặt nhãn bên ngoài viền\n                align: \"end\",\n                offset: 10\n              }\n            }\n          }\n        });\n        setChartInstance(newChart);\n        setDateRange(calculateDateRange(selectedDate));\n      } catch (error) {\n        console.error(\"Error fetching or displaying data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 5,\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginLeft: \"250px\",\n          color: \"#27AAE1\",\n          fontSize: \"24px\",\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          textTransform: \"uppercase\"\n        },\n        children: \"S\\u1EA3n ph\\u1EA9m b\\xE1n ch\\u1EA1y trong \\u1EE9ng d\\u1EE5ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value),\n          style: {\n            padding: \"8px 12px\",\n            fontSize: \"14px\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            backgroundColor: \"rgba(39, 170, 225, 0.6)\",\n            color: \"white\",\n            cursor: \"pointer\",\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), dateRange && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n        fontSize: \"14px\",\n        color: \"#555\"\n      },\n      children: [\"Kho\\u1EA3ng th\\u1EDDi gian: \", dateRange]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"700px\",\n        margin: \"50px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        style: {\n          maxWidth: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(TopProductsChart, \"9QOBw6fj6r9GLbH3bmlx4aQPzVA=\");\n_c = TopProductsChart;\nexport default TopProductsChart;\nvar _c;\n$RefreshReg$(_c, \"TopProductsChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","CategoryScale","LinearScale","PieController","ArcElement","Title","Tooltip","Legend","ChartDataLabels","jsxDEV","_jsxDEV","TopProductsChart","_s","getStartOfWeek","today","Date","dayOfWeek","getDay","startOfWeek","setDate","getDate","toISOString","split","selectedDate","setSelectedDate","chartInstance","setChartInstance","dateRange","setDateRange","calculateDateRange","startDate","start","end","formatDate","date","toString","padStart","getMonth","getFullYear","register","fetchData","query","res","fetch","result","json","labels","data","forEach","element","push","name","Number","sold","ctx","document","getElementById","getContext","destroy","newChart","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","aspectRatio","plugins","legend","position","generateLabels","chart","map","index","text","fillStyle","datalabels","color","font","size","weight","formatter","value","context","dataset","total","reduce","sum","percentage","toFixed","anchor","align","offset","error","console","style","padding","marginBottom","children","display","justifyContent","alignItems","marginLeft","fontSize","fontWeight","textAlign","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","border","borderRadius","cursor","boxShadow","marginTop","maxWidth","margin","id","height","_c","$RefreshReg$"],"sources":["D:/WebAdminFinal/src/Screen/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PieController,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nconst TopProductsChart = () => {\r\n  const getStartOfWeek = () => {\r\n    const today = new Date();\r\n    const dayOfWeek = today.getDay(); // 0 (Chủ nhật) đến 6 (Thứ bảy)\r\n    const startOfWeek = new Date(today);\r\n    startOfWeek.setDate(\r\n      today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)\r\n    ); // Nếu Chủ nhật, lấy thứ Hai trước đó\r\n    return startOfWeek.toISOString().split(\"T\")[0]; // Trả về dạng 'YYYY-MM-DD'\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(getStartOfWeek());\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [dateRange, setDateRange] = useState(\"\");\r\n\r\n  const calculateDateRange = (startDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(start);\r\n    end.setDate(start.getDate() + 6);\r\n\r\n    const formatDate = (date) =>\r\n      `${date.getDate().toString().padStart(2, \"0\")}/${(date.getMonth() + 1)\r\n        .toString()\r\n        .padStart(2, \"0\")}/${date.getFullYear()}`;\r\n\r\n    return `${formatDate(start)} - ${formatDate(end)}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(\r\n      CategoryScale,\r\n      LinearScale,\r\n      PieController,\r\n      ArcElement,\r\n      Title,\r\n      Tooltip,\r\n      Legend,\r\n      ChartDataLabels // Đăng ký plugin\r\n    );\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const query = `?date=${selectedDate}`;\r\n        const res = await fetch(\r\n          `http://localhost:6677/products/getTop10PW${query}`\r\n        );\r\n        const result = await res.json();\r\n\r\n        const labels = [];\r\n        const data = [];\r\n        result.data.forEach((element) => {\r\n          labels.push(element.name);\r\n          data.push(Number(element.sold));\r\n        });\r\n\r\n        const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n\r\n        if (chartInstance) {\r\n          chartInstance.destroy();\r\n        }\r\n\r\n        const newChart = new Chart(ctx, {\r\n          type: \"pie\",\r\n          data: {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: \"Lượt bán\",\r\n                data: data,\r\n                backgroundColor: [\r\n                  \"rgba(255, 99, 132, 0.8)\",\r\n                  \"rgba(54, 162, 235, 0.8)\",\r\n                  \"rgba(75, 192, 192, 0.8)\",\r\n                  \"rgba(255, 206, 86, 0.8)\",\r\n                  \"rgba(153, 102, 255, 0.8)\",\r\n                  \"rgba(255, 159, 64, 0.8)\",\r\n                  \"rgba(201, 203, 207, 0.8)\",\r\n                  \"rgba(90, 203, 207, 0.8)\",\r\n                ],\r\n                borderColor: [\r\n                  \"rgba(255, 99, 132, 1)\",\r\n                  \"rgba(54, 162, 235, 1)\",\r\n                  \"rgba(75, 192, 192, 1)\",\r\n                  \"rgba(255, 206, 86, 1)\",\r\n                  \"rgba(153, 102, 255, 1)\",\r\n                  \"rgba(255, 159, 64, 1)\",\r\n                  \"rgba(201, 203, 207, 1)\",\r\n                  \"rgba(90, 203, 207, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            aspectRatio: 1.5,\r\n            plugins: {\r\n              legend: {\r\n                position: \"top\",\r\n                labels: {\r\n                  generateLabels: (chart) =>\r\n                    chart.data.labels.map((label, index) => ({\r\n                      text: `${label}`,\r\n                      fillStyle: chart.data.datasets[0].backgroundColor[index],\r\n                    })),\r\n                },\r\n              },\r\n              datalabels: {\r\n                color: \"black\",\r\n                font: {\r\n                  size: 12,\r\n                  weight: \"bold\",\r\n                },\r\n                formatter: (value, context) => {\r\n                  const dataset = context.chart.data.datasets[0];\r\n                  const total = dataset.data.reduce((sum, data) => sum + data, 0);\r\n                  const percentage = ((value / total) * 100).toFixed(1); // Tính %\r\n                  return `${percentage}%`; // Hiển thị %\r\n                },\r\n                anchor: \"end\", // Đặt nhãn bên ngoài viền\r\n                align: \"end\",\r\n                offset: 10,\r\n              },\r\n            },\r\n          },\r\n        });\r\n\r\n        setChartInstance(newChart);\r\n\r\n        setDateRange(calculateDateRange(selectedDate));\r\n      } catch (error) {\r\n        console.error(\"Error fetching or displaying data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <div style={{ padding: 5, marginBottom: \"20px\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            marginLeft: \"250px\",\r\n            color: \"#27AAE1\",\r\n            fontSize: \"24px\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n          }}\r\n        >\r\n          Sản phẩm bán chạy trong ứng dụng\r\n        </h1>\r\n\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n            style={{\r\n              padding: \"8px 12px\",\r\n              fontSize: \"14px\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"rgba(39, 170, 225, 0.6)\",\r\n              color: \"white\",\r\n              cursor: \"pointer\",\r\n              boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {dateRange && (\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"10px\",\r\n            fontSize: \"14px\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          Khoảng thời gian: {dateRange}\r\n        </p>\r\n      )}\r\n\r\n      <div style={{ maxWidth: \"700px\", margin: \"50px auto\" }}>\r\n        <canvas\r\n          id=\"myChart\"\r\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n        ></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopProductsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}